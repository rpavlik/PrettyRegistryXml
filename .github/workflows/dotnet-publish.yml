# Copyright 2020 GitHub
# Copyright 2021 Collabora, Ltd
#
# SPDX-License-Identifier: MIT

name: Publish releases

on:
  push:
    tags:
      - "v*"

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        # uses: actions/create-release@v1

        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: true
          prerelease: false
  build_assets:
    name: Build release assets
    needs: create_release # To get the upload URL
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
          - os: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build release
        shell: pwsh
        env:
          BUILD_OS: ${{ matrix.config.os }}
        run: |
          $Version = (git describe).Trim("v")
          echo "MY_VER=$Version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          dotnet build -c Release "-property:Version=$Version" "-property:AssemblyFileVersion=$Version" "-property:AssemblyInformationalVersionVersion=$Version"
          dotnet publish -c Release -o out/${Env:BUILD_OS} "-property:Version=$Version"  "-property:AssemblyFileVersion=$Version" "-property:AssemblyInformationalVersionVersion=$Version"
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: PrettyRegistryXML-${{ github.ref }}-${{ matrix.config.os }}
          path: out/${{ matrix.config.os }}
      - name: Upload to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: PrettyRegistryXML-${{ github.ref }}-${{ matrix.config.os }}
          asset_path: out/${{ matrix.config.os }}
          asset_content_type: application/octet-stream
